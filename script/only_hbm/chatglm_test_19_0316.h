// generated by dlavm.backend in 2025-03-17 12:55:35

// hbm storage define
uint32_t hbm0 = 0x00000000;
uint32_t hbm1 = 0x00002000;
uint32_t hbm2 = 0x00044000;
uint32_t hbm3 = 0x00046000;
uint32_t hbm4 = 0x00056000;
uint32_t hbm5 = 0x0005a200;
uint32_t hbm6 = 0x0005a400;
uint32_t hbm7 = 0x0005e600;
uint32_t hbm8 = 0x0005e800;
uint32_t hbm9 = 0x000a0800;
uint32_t hbm10 = 0x000a2800;
uint32_t hbm11 = 0x000a4800;
uint32_t hbm12 = 0x00181300;
uint32_t hbm13 = 0x00187e00;
uint32_t hbm14 = 0x00187e40;
uint32_t hbm15 = 0x00264940;
uint32_t hbm16 = 0x0026b440;
uint32_t hbm17 = 0x00348440;
uint32_t hbm18 = 0x0034a440;
uint32_t hbm19 = 0x0034c440;
uint32_t hbm20 = 0x00764040;
// hbm_cache storage define
uint32_t hbm_cache0 = 0x00783c40;
uint32_t hbm_cache1 = 0x0078bc40;
// runtime storage define
uint32_t runtime0 = 0x00793c40;
uint32_t runtime1 = 0x007a69e0;
uint32_t runtime2 = 0x007a7ce0;
uint32_t runtime3 = 0x007abd00;
uint32_t runtime4 = 0x007afd20;

uint64_t input = runtime0;

int wrap_output(HANDLE& device) {
  return CSB_Read(device, 40);
}

void BLOCK00_lnweight0_load_param(HANDLE& h2cx, char* prefix) {
  for (uint64_t port = 0; port < 32; port += 1) {
    char real_path[100];
    sprintf(real_path, "%s/BLOCK00_test", prefix, port);
    DDR_Write_bin(h2cx, real_path, ((uint64_t)(hbm0 + (port * 268435456))), 8192);
  }
}
void BLOCK00_qweight_load_param(HANDLE& h2cx, char* prefix) {
  for (uint64_t port = 0; port < 32; port += 1) {
    char real_path[100];
    sprintf(real_path, "%s/BLOCK00_test", prefix, port);
    DDR_Write_bin(h2cx, real_path, ((uint64_t)(hbm1 + (port * 268435456))), 270336);
  }
}
void BLOCK00_qbias_load_param(HANDLE& h2cx, char* prefix) {
  for (uint64_t port = 0; port < 32; port += 1) {
    char real_path[100];
    sprintf(real_path, "%s/BLOCK00_test", prefix, port);
    DDR_Write_bin(h2cx, real_path, ((uint64_t)(hbm2 + (port * 268435456))), 8192);
  }
}
void pos_emb_weight_load_param(HANDLE& h2cx, char* prefix) {
  for (uint64_t port = 0; port < 32; port += 1) {
    char real_path[100];
    sprintf(real_path, "%s/test", prefix, port);
    DDR_Write_bin(h2cx, real_path, ((uint64_t)(hbm3 + (port * 268435456))), 65536);
  }
}
void BLOCK00_kweight_load_param(HANDLE& h2cx, char* prefix) {
  for (uint64_t port = 0; port < 32; port += 1) {
    char real_path[100];
    sprintf(real_path, "%s/BLOCK00_test", prefix, port);
    DDR_Write_bin(h2cx, real_path, ((uint64_t)(hbm4 + (port * 268435456))), 16896);
  }
}
void BLOCK00_kbias_load_param(HANDLE& h2cx, char* prefix) {
  for (uint64_t port = 0; port < 32; port += 1) {
    char real_path[100];
    sprintf(real_path, "%s/BLOCK00_test", prefix, port);
    DDR_Write_bin(h2cx, real_path, ((uint64_t)(hbm5 + (port * 268435456))), 512);
  }
}
void BLOCK00_vweight_load_param(HANDLE& h2cx, char* prefix) {
  for (uint64_t port = 0; port < 32; port += 1) {
    char real_path[100];
    sprintf(real_path, "%s/BLOCK00_test", prefix, port);
    DDR_Write_bin(h2cx, real_path, ((uint64_t)(hbm6 + (port * 268435456))), 16896);
  }
}
void BLOCK00_vbias_load_param(HANDLE& h2cx, char* prefix) {
  for (uint64_t port = 0; port < 32; port += 1) {
    char real_path[100];
    sprintf(real_path, "%s/BLOCK00_test", prefix, port);
    DDR_Write_bin(h2cx, real_path, ((uint64_t)(hbm7 + (port * 268435456))), 512);
  }
}
void BLOCK00_oweight_load_param(HANDLE& h2cx, char* prefix) {
  for (uint64_t port = 0; port < 32; port += 1) {
    char real_path[100];
    sprintf(real_path, "%s/BLOCK00_test", prefix, port);
    DDR_Write_bin(h2cx, real_path, ((uint64_t)(hbm8 + (port * 268435456))), 270336);
  }
}
void BLOCK00_obias_load_param(HANDLE& h2cx, char* prefix) {
  for (uint64_t port = 0; port < 32; port += 1) {
    char real_path[100];
    sprintf(real_path, "%s/BLOCK00_test", prefix, port);
    DDR_Write_bin(h2cx, real_path, ((uint64_t)(hbm9 + (port * 268435456))), 8192);
  }
}
void BLOCK00_lnweight1_load_param(HANDLE& h2cx, char* prefix) {
  for (uint64_t port = 0; port < 32; port += 1) {
    char real_path[100];
    sprintf(real_path, "%s/BLOCK00_test", prefix, port);
    DDR_Write_bin(h2cx, real_path, ((uint64_t)(hbm10 + (port * 268435456))), 8192);
  }
}
void BLOCK00_hweight1_load_param(HANDLE& h2cx, char* prefix) {
  for (uint64_t port = 0; port < 32; port += 1) {
    char real_path[100];
    sprintf(real_path, "%s/BLOCK00_test", prefix, port);
    DDR_Write_bin(h2cx, real_path, ((uint64_t)(hbm11 + (port * 268435456))), 903936);
  }
}
void BLOCK00_hbias1_load_param(HANDLE& h2cx, char* prefix) {
  for (uint64_t port = 0; port < 32; port += 1) {
    char real_path[100];
    sprintf(real_path, "%s/BLOCK00_test", prefix, port);
    DDR_Write_bin(h2cx, real_path, ((uint64_t)(hbm12 + (port * 268435456))), 27392);
  }
}
void silu_weight_load_param(HANDLE& h2cx, char* prefix) {
  for (uint64_t port = 0; port < 32; port += 1) {
    char real_path[100];
    sprintf(real_path, "%s/test", prefix, port);
    DDR_Write_bin(h2cx, real_path, ((uint64_t)(hbm13 + (port * 268435456))), 64);
  }
}
void BLOCK00_hweight2_load_param(HANDLE& h2cx, char* prefix) {
  for (uint64_t port = 0; port < 32; port += 1) {
    char real_path[100];
    sprintf(real_path, "%s/BLOCK00_test", prefix, port);
    DDR_Write_bin(h2cx, real_path, ((uint64_t)(hbm14 + (port * 268435456))), 903936);
  }
}
void BLOCK00_hbias2_load_param(HANDLE& h2cx, char* prefix) {
  for (uint64_t port = 0; port < 32; port += 1) {
    char real_path[100];
    sprintf(real_path, "%s/BLOCK00_test", prefix, port);
    DDR_Write_bin(h2cx, real_path, ((uint64_t)(hbm15 + (port * 268435456))), 27392);
  }
}
void BLOCK00_lweight_load_param(HANDLE& h2cx, char* prefix) {
  for (uint64_t port = 0; port < 32; port += 1) {
    char real_path[100];
    sprintf(real_path, "%s/BLOCK00_test", prefix, port);
    DDR_Write_bin(h2cx, real_path, ((uint64_t)(hbm16 + (port * 268435456))), 905216);
  }
}
void BLOCK00_lbias_load_param(HANDLE& h2cx, char* prefix) {
  for (uint64_t port = 0; port < 32; port += 1) {
    char real_path[100];
    sprintf(real_path, "%s/BLOCK00_test", prefix, port);
    DDR_Write_bin(h2cx, real_path, ((uint64_t)(hbm17 + (port * 268435456))), 8192);
  }
}
void out_lnweight_load_param(HANDLE& h2cx, char* prefix) {
  for (uint64_t port = 0; port < 32; port += 1) {
    char real_path[100];
    sprintf(real_path, "%s/test", prefix, port);
    DDR_Write_bin(h2cx, real_path, ((uint64_t)(hbm18 + (port * 268435456))), 8192);
  }
}
void oweight_load_param(HANDLE& h2cx, char* prefix) {
  for (uint64_t port = 0; port < 32; port += 1) {
    char real_path[100];
    sprintf(real_path, "%s/test", prefix, port);
    DDR_Write_bin(h2cx, real_path, ((uint64_t)(hbm19 + (port * 268435456))), 4291584);
  }
}
void obias_load_param(HANDLE& h2cx, char* prefix) {
  for (uint64_t port = 0; port < 32; port += 1) {
    char real_path[100];
    sprintf(real_path, "%s/test", prefix, port);
    DDR_Write_bin(h2cx, real_path, ((uint64_t)(hbm20 + (port * 268435456))), 130048);
  }
}

void test_load_params(HANDLE& h2cx, char* prefix) {
  BLOCK00_lnweight0_load_param(h2cx, prefix);
  BLOCK00_qweight_load_param(h2cx, prefix);
  BLOCK00_qbias_load_param(h2cx, prefix);
  pos_emb_weight_load_param(h2cx, prefix);
  BLOCK00_kweight_load_param(h2cx, prefix);
  BLOCK00_kbias_load_param(h2cx, prefix);
  BLOCK00_vweight_load_param(h2cx, prefix);
  BLOCK00_vbias_load_param(h2cx, prefix);
  BLOCK00_oweight_load_param(h2cx, prefix);
  BLOCK00_obias_load_param(h2cx, prefix);
  BLOCK00_lnweight1_load_param(h2cx, prefix);
  BLOCK00_hweight1_load_param(h2cx, prefix);
  BLOCK00_hbias1_load_param(h2cx, prefix);
  silu_weight_load_param(h2cx, prefix);
  BLOCK00_hweight2_load_param(h2cx, prefix);
  BLOCK00_hbias2_load_param(h2cx, prefix);
  BLOCK00_lweight_load_param(h2cx, prefix);
  BLOCK00_lbias_load_param(h2cx, prefix);
  out_lnweight_load_param(h2cx, prefix);
  oweight_load_param(h2cx, prefix);
  obias_load_param(h2cx, prefix);
}

void norm_step_1(HANDLE& device) {
  CSB_Write(device, 130, hbm0);
  CSB_Write(device, 131, runtime0);
  CSB_Write(device, 132, 608);
  CSB_Write(device, 133, 608);
  CSB_Write(device, 134, runtime1);
  CSB_Write(device, 135, 608);
  CSB_Write(device, 136, 608);
  CSB_Write(device, 137, 4096);
  CSB_Write(device, 138, 1);
  CSB_Write(device, 139, 19);
  CSB_Write(device, 140, 19);
  CSB_Write(device, 141, 155648);
  CSB_Write(device, 142, 0);
  CSB_Write(device, 143, 0);
  CSB_Write(device, 144, 0);
  CSB_Write(device, 145, 32);
  while (CSB_Read(device, 129) != 1) {}
}
void mvm_f16xi4_step_2(HANDLE& device) {
  for (int ch = 0; ch < 4; ch += 1) {
    CSB_Write(device, 2, 4096);
    CSB_Write(device, 3, 19);
    CSB_Write(device, 4, 1);
    CSB_Write(device, 5, 19);
    CSB_Write(device, 6, 1);
    CSB_Write(device, 7, ((ch < 3) ? 1024 : 1024));
    CSB_Write(device, 8, (ch * 1024));
    CSB_Write(device, 9, 0);
    CSB_Write(device, 10, runtime1);
    CSB_Write(device, 11, (hbm1 + (67584 * ch)));
    CSB_Write(device, 12, 16896);
    CSB_Write(device, 13, (runtime2 + (608 * ((ch * 1024) / 512))));
    CSB_Write(device, 14, 0);
    CSB_Write(device, 15, 0);
    CSB_Write(device, 16, ((ch ? 1 : 0) * 2));
    CSB_Write(device, 17, 0);
    CSB_Write(device, 18, 0);
    CSB_Write(device, 19, 65792);
    CSB_Write(device, 20, 65792);
    CSB_Write(device, 21, 0);
    CSB_Write(device, 22, 5769216);
    CSB_Write(device, 23, 3670144);
    CSB_Write(device, 24, 2048);
    CSB_Write(device, 25, (hbm2 + (32 * ((ch * 1024) / 256))));
    CSB_Write(device, 26, 0);
    CSB_Write(device, 27, 0);
    CSB_Write(device, 28, 0);
    CSB_Write(device, 29, 608);
    CSB_Write(device, 30, 608);
    CSB_Write(device, 31, 608);
    CSB_Write(device, 32, 608);
    CSB_Write(device, 33, 31);
    while (CSB_Read(device, 1) != 1) {}
  }
}
void rope_step_3(HANDLE& device) {
  CSB_Write(device, 130, hbm3);
  CSB_Write(device, 131, runtime2);
  CSB_Write(device, 132, 608);
  CSB_Write(device, 133, 608);
  CSB_Write(device, 134, runtime3);
  CSB_Write(device, 135, 608);
  CSB_Write(device, 136, 608);
  CSB_Write(device, 137, 128);
  CSB_Write(device, 138, 19);
  CSB_Write(device, 139, 1);
  CSB_Write(device, 140, 32);
  CSB_Write(device, 141, 65536);
  CSB_Write(device, 142, 65536);
  CSB_Write(device, 143, 2052);
  CSB_Write(device, 144, 0);
  CSB_Write(device, 145, 4);
  while (CSB_Read(device, 129) != 1) {}
}
void mvm_f16xi4_step_4(HANDLE& device) {
  CSB_Write(device, 2, 4096);
  CSB_Write(device, 3, 19);
  CSB_Write(device, 4, 1);
  CSB_Write(device, 5, 19);
  CSB_Write(device, 6, 1);
  CSB_Write(device, 7, 256);
  CSB_Write(device, 8, 0);
  CSB_Write(device, 9, 0);
  CSB_Write(device, 10, runtime1);
  CSB_Write(device, 11, hbm4);
  CSB_Write(device, 12, 16896);
  CSB_Write(device, 13, runtime2);
  CSB_Write(device, 14, 0);
  CSB_Write(device, 15, 0);
  CSB_Write(device, 16, 0);
  CSB_Write(device, 17, 0);
  CSB_Write(device, 18, 0);
  CSB_Write(device, 19, 65792);
  CSB_Write(device, 20, 65792);
  CSB_Write(device, 21, 0);
  CSB_Write(device, 22, 5769216);
  CSB_Write(device, 23, 3670144);
  CSB_Write(device, 24, 2048);
  CSB_Write(device, 25, hbm5);
  CSB_Write(device, 26, 0);
  CSB_Write(device, 27, 0);
  CSB_Write(device, 28, 0);
  CSB_Write(device, 29, 608);
  CSB_Write(device, 30, 608);
  CSB_Write(device, 31, 608);
  CSB_Write(device, 32, 608);
  CSB_Write(device, 33, 31);
  while (CSB_Read(device, 1) != 1) {}
}
void rope_step_5(HANDLE& device) {
  CSB_Write(device, 130, hbm3);
  CSB_Write(device, 131, runtime2);
  CSB_Write(device, 132, 608);
  CSB_Write(device, 133, 608);
  CSB_Write(device, 134, runtime4);
  CSB_Write(device, 135, 608);
  CSB_Write(device, 136, 608);
  CSB_Write(device, 137, 128);
  CSB_Write(device, 138, 19);
  CSB_Write(device, 139, 1);
  CSB_Write(device, 140, 2);
  CSB_Write(device, 141, 65536);
  CSB_Write(device, 142, 65536);
  CSB_Write(device, 143, 260);
  CSB_Write(device, 144, 0);
  CSB_Write(device, 145, 4);
  while (CSB_Read(device, 129) != 1) {}
}
void kvcache2hbm_step_6(HANDLE& device) {
  CSB_Write(device, 130, 0);
  CSB_Write(device, 131, runtime4);
  CSB_Write(device, 132, 608);
  CSB_Write(device, 133, 608);
  CSB_Write(device, 134, hbm_cache0);
  CSB_Write(device, 135, 16384);
  CSB_Write(device, 136, 4096);
  CSB_Write(device, 137, 128);
  CSB_Write(device, 138, 1);
  CSB_Write(device, 139, 19);
  CSB_Write(device, 140, 2);
  CSB_Write(device, 141, 0);
  CSB_Write(device, 142, 1);
  CSB_Write(device, 143, 260);
  CSB_Write(device, 144, 0);
  CSB_Write(device, 145, 64);
  while (CSB_Read(device, 129) != 1) {}
}
void mvm_f16xf16_step_7(HANDLE& device) {
  CSB_Write(device, 2, 128);
  CSB_Write(device, 3, 19);
  CSB_Write(device, 4, 16);
  CSB_Write(device, 5, 19);
  CSB_Write(device, 6, 16);
  CSB_Write(device, 7, 32);
  CSB_Write(device, 8, 0);
  CSB_Write(device, 9, 0);
  CSB_Write(device, 10, runtime3);
  CSB_Write(device, 11, hbm_cache0);
  CSB_Write(device, 12, 2048);
  CSB_Write(device, 13, runtime2);
  CSB_Write(device, 14, 0);
  CSB_Write(device, 15, 0);
  CSB_Write(device, 16, 0);
  CSB_Write(device, 17, 2);
  CSB_Write(device, 18, 224577);
  CSB_Write(device, 19, 65792);
  CSB_Write(device, 20, 65792);
  CSB_Write(device, 21, 0);
  CSB_Write(device, 22, 0);
  CSB_Write(device, 23, 0);
  CSB_Write(device, 24, 0);
  CSB_Write(device, 25, 0);
  CSB_Write(device, 26, 0);
  CSB_Write(device, 27, 1028);
  CSB_Write(device, 28, 1);
  CSB_Write(device, 29, 608);
  CSB_Write(device, 30, 608);
  CSB_Write(device, 31, 608);
  CSB_Write(device, 32, 608);
  CSB_Write(device, 33, 15);
  while (CSB_Read(device, 1) != 1) {}
  CSB_Write(device, 2, 128);
  CSB_Write(device, 3, 19);
  CSB_Write(device, 4, 16);
  CSB_Write(device, 5, 19);
  CSB_Write(device, 6, 16);
  CSB_Write(device, 7, 32);
  CSB_Write(device, 8, 0);
  CSB_Write(device, 9, 0);
  CSB_Write(device, 10, (runtime3 + 2432));
  CSB_Write(device, 11, (hbm_cache0 + 16384));
  CSB_Write(device, 12, 2048);
  CSB_Write(device, 13, (runtime2 + 9728));
  CSB_Write(device, 14, 0);
  CSB_Write(device, 15, 0);
  CSB_Write(device, 16, 0);
  CSB_Write(device, 17, 2);
  CSB_Write(device, 18, 224577);
  CSB_Write(device, 19, 65792);
  CSB_Write(device, 20, 65792);
  CSB_Write(device, 21, 0);
  CSB_Write(device, 22, 0);
  CSB_Write(device, 23, 0);
  CSB_Write(device, 24, 0);
  CSB_Write(device, 25, 0);
  CSB_Write(device, 26, 0);
  CSB_Write(device, 27, 1028);
  CSB_Write(device, 28, 1);
  CSB_Write(device, 29, 608);
  CSB_Write(device, 30, 608);
  CSB_Write(device, 31, 608);
  CSB_Write(device, 32, 608);
  CSB_Write(device, 33, 15);
  while (CSB_Read(device, 1) != 1) {}
}
void softmax_step_8(HANDLE& device) {
  CSB_Write(device, 130, 0);
  CSB_Write(device, 131, runtime2);
  CSB_Write(device, 132, 608);
  CSB_Write(device, 133, 608);
  CSB_Write(device, 134, runtime3);
  CSB_Write(device, 135, 608);
  CSB_Write(device, 136, 608);
  CSB_Write(device, 137, 19);
  CSB_Write(device, 138, 32);
  CSB_Write(device, 139, 19);
  CSB_Write(device, 140, 19);
  CSB_Write(device, 141, 0);
  CSB_Write(device, 142, 0);
  CSB_Write(device, 143, 0);
  CSB_Write(device, 144, 0);
  CSB_Write(device, 145, 8);
  while (CSB_Read(device, 129) != 1) {}
}
void mvm_f16xi4_step_9(HANDLE& device) {
  CSB_Write(device, 2, 4096);
  CSB_Write(device, 3, 19);
  CSB_Write(device, 4, 1);
  CSB_Write(device, 5, 19);
  CSB_Write(device, 6, 1);
  CSB_Write(device, 7, 256);
  CSB_Write(device, 8, 0);
  CSB_Write(device, 9, 0);
  CSB_Write(device, 10, runtime1);
  CSB_Write(device, 11, hbm6);
  CSB_Write(device, 12, 16896);
  CSB_Write(device, 13, runtime4);
  CSB_Write(device, 14, 0);
  CSB_Write(device, 15, 0);
  CSB_Write(device, 16, 0);
  CSB_Write(device, 17, 0);
  CSB_Write(device, 18, 0);
  CSB_Write(device, 19, 65792);
  CSB_Write(device, 20, 65792);
  CSB_Write(device, 21, 0);
  CSB_Write(device, 22, 5769216);
  CSB_Write(device, 23, 3670144);
  CSB_Write(device, 24, 2048);
  CSB_Write(device, 25, hbm7);
  CSB_Write(device, 26, 0);
  CSB_Write(device, 27, 0);
  CSB_Write(device, 28, 0);
  CSB_Write(device, 29, 608);
  CSB_Write(device, 30, 608);
  CSB_Write(device, 31, 608);
  CSB_Write(device, 32, 608);
  CSB_Write(device, 33, 31);
  while (CSB_Read(device, 1) != 1) {}
}
void kvcache2hbm_step_10(HANDLE& device) {
  CSB_Write(device, 130, 0);
  CSB_Write(device, 131, runtime4);
  CSB_Write(device, 132, 608);
  CSB_Write(device, 133, 608);
  CSB_Write(device, 134, hbm_cache1);
  CSB_Write(device, 135, 16384);
  CSB_Write(device, 136, 4096);
  CSB_Write(device, 137, 128);
  CSB_Write(device, 138, 1);
  CSB_Write(device, 139, 19);
  CSB_Write(device, 140, 2);
  CSB_Write(device, 141, 0);
  CSB_Write(device, 142, 2);
  CSB_Write(device, 143, 260);
  CSB_Write(device, 144, 0);
  CSB_Write(device, 145, 64);
  while (CSB_Read(device, 129) != 1) {}
}
void mvm_f16xf16_step_11(HANDLE& device) {
  CSB_Write(device, 2, 32);
  CSB_Write(device, 3, 19);
  CSB_Write(device, 4, 16);
  CSB_Write(device, 5, 19);
  CSB_Write(device, 6, 16);
  CSB_Write(device, 7, 128);
  CSB_Write(device, 8, 0);
  CSB_Write(device, 9, 0);
  CSB_Write(device, 10, runtime3);
  CSB_Write(device, 11, hbm_cache1);
  CSB_Write(device, 12, 512);
  CSB_Write(device, 13, runtime1);
  CSB_Write(device, 14, 0);
  CSB_Write(device, 15, 0);
  CSB_Write(device, 16, 0);
  CSB_Write(device, 17, 3);
  CSB_Write(device, 18, 253952);
  CSB_Write(device, 19, 65792);
  CSB_Write(device, 20, 65792);
  CSB_Write(device, 21, 0);
  CSB_Write(device, 22, 0);
  CSB_Write(device, 23, 0);
  CSB_Write(device, 24, 0);
  CSB_Write(device, 25, 0);
  CSB_Write(device, 26, 4096);
  CSB_Write(device, 27, 1028);
  CSB_Write(device, 28, 2);
  CSB_Write(device, 29, 608);
  CSB_Write(device, 30, 608);
  CSB_Write(device, 31, 608);
  CSB_Write(device, 32, 608);
  CSB_Write(device, 33, 15);
  while (CSB_Read(device, 1) != 1) {}
  CSB_Write(device, 2, 32);
  CSB_Write(device, 3, 19);
  CSB_Write(device, 4, 16);
  CSB_Write(device, 5, 19);
  CSB_Write(device, 6, 16);
  CSB_Write(device, 7, 128);
  CSB_Write(device, 8, 0);
  CSB_Write(device, 9, 0);
  CSB_Write(device, 10, (runtime3 + 2432));
  CSB_Write(device, 11, (hbm_cache1 + 16384));
  CSB_Write(device, 12, 512);
  CSB_Write(device, 13, (runtime1 + 9728));
  CSB_Write(device, 14, 0);
  CSB_Write(device, 15, 0);
  CSB_Write(device, 16, 0);
  CSB_Write(device, 17, 3);
  CSB_Write(device, 18, 253952);
  CSB_Write(device, 19, 65792);
  CSB_Write(device, 20, 65792);
  CSB_Write(device, 21, 0);
  CSB_Write(device, 22, 0);
  CSB_Write(device, 23, 0);
  CSB_Write(device, 24, 0);
  CSB_Write(device, 25, 0);
  CSB_Write(device, 26, 4096);
  CSB_Write(device, 27, 1028);
  CSB_Write(device, 28, 2);
  CSB_Write(device, 29, 608);
  CSB_Write(device, 30, 608);
  CSB_Write(device, 31, 608);
  CSB_Write(device, 32, 608);
  CSB_Write(device, 33, 15);
  while (CSB_Read(device, 1) != 1) {}
}
void mvm_f16xi4_step_12(HANDLE& device) {
  for (int ch = 0; ch < 4; ch += 1) {
    CSB_Write(device, 2, 4096);
    CSB_Write(device, 3, 19);
    CSB_Write(device, 4, 1);
    CSB_Write(device, 5, 19);
    CSB_Write(device, 6, 1);
    CSB_Write(device, 7, ((ch < 3) ? 1024 : 1024));
    CSB_Write(device, 8, (ch * 1024));
    CSB_Write(device, 9, 0);
    CSB_Write(device, 10, runtime1);
    CSB_Write(device, 11, (hbm8 + (67584 * ch)));
    CSB_Write(device, 12, 16896);
    CSB_Write(device, 13, (runtime3 + (608 * ((ch * 1024) / 512))));
    CSB_Write(device, 14, 0);
    CSB_Write(device, 15, 0);
    CSB_Write(device, 16, ((ch ? 1 : 0) * 2));
    CSB_Write(device, 17, 0);
    CSB_Write(device, 18, 0);
    CSB_Write(device, 19, 65792);
    CSB_Write(device, 20, 65792);
    CSB_Write(device, 21, 0);
    CSB_Write(device, 22, 5769216);
    CSB_Write(device, 23, 3670144);
    CSB_Write(device, 24, 2048);
    CSB_Write(device, 25, (hbm9 + (32 * ((ch * 1024) / 256))));
    CSB_Write(device, 26, 0);
    CSB_Write(device, 27, 0);
    CSB_Write(device, 28, 0);
    CSB_Write(device, 29, 608);
    CSB_Write(device, 30, 608);
    CSB_Write(device, 31, 608);
    CSB_Write(device, 32, 608);
    CSB_Write(device, 33, 31);
    while (CSB_Read(device, 1) != 1) {}
  }
}
void elementwise_step_13(HANDLE& device) {
  CSB_Write(device, 130, 0);
  CSB_Write(device, 131, runtime3);
  CSB_Write(device, 132, 608);
  CSB_Write(device, 133, 608);
  CSB_Write(device, 134, runtime1);
  CSB_Write(device, 135, 608);
  CSB_Write(device, 136, 608);
  CSB_Write(device, 137, 4096);
  CSB_Write(device, 138, 19);
  CSB_Write(device, 139, 1);
  CSB_Write(device, 140, runtime0);
  CSB_Write(device, 141, 608);
  CSB_Write(device, 142, 608);
  CSB_Write(device, 145, 2);
  while (CSB_Read(device, 129) != 1) {}
}
void norm_step_14(HANDLE& device) {
  CSB_Write(device, 130, hbm10);
  CSB_Write(device, 131, runtime1);
  CSB_Write(device, 132, 608);
  CSB_Write(device, 133, 608);
  CSB_Write(device, 134, runtime0);
  CSB_Write(device, 135, 608);
  CSB_Write(device, 136, 608);
  CSB_Write(device, 137, 4096);
  CSB_Write(device, 138, 1);
  CSB_Write(device, 139, 19);
  CSB_Write(device, 140, 19);
  CSB_Write(device, 141, 155648);
  CSB_Write(device, 142, 0);
  CSB_Write(device, 143, 0);
  CSB_Write(device, 144, 0);
  CSB_Write(device, 145, 32);
  while (CSB_Read(device, 129) != 1) {}
}
void mvm_f16xi4_step_15(HANDLE& device) {
  for (int ch = 0; ch < 14; ch += 1) {
    CSB_Write(device, 2, 4096);
    CSB_Write(device, 3, 19);
    CSB_Write(device, 4, 1);
    CSB_Write(device, 5, 19);
    CSB_Write(device, 6, 1);
    CSB_Write(device, 7, ((ch < 13) ? 1024 : 384));
    CSB_Write(device, 8, (ch * 1024));
    CSB_Write(device, 9, 0);
    CSB_Write(device, 10, runtime0);
    CSB_Write(device, 11, (hbm11 + (67584 * ch)));
    CSB_Write(device, 12, 16896);
    CSB_Write(device, 13, (runtime3 + (608 * ((ch * 1024) / 512))));
    CSB_Write(device, 14, 0);
    CSB_Write(device, 15, 0);
    CSB_Write(device, 16, ((ch ? 1 : 0) * 2));
    CSB_Write(device, 17, 0);
    CSB_Write(device, 18, 0);
    CSB_Write(device, 19, 65792);
    CSB_Write(device, 20, 65792);
    CSB_Write(device, 21, 0);
    CSB_Write(device, 22, 5769216);
    CSB_Write(device, 23, 3670144);
    CSB_Write(device, 24, 2048);
    CSB_Write(device, 25, (hbm12 + (32 * ((ch * 1024) / 256))));
    CSB_Write(device, 26, 0);
    CSB_Write(device, 27, 0);
    CSB_Write(device, 28, 0);
    CSB_Write(device, 29, 608);
    CSB_Write(device, 30, 608);
    CSB_Write(device, 31, 608);
    CSB_Write(device, 32, 608);
    CSB_Write(device, 33, 31);
    while (CSB_Read(device, 1) != 1) {}
  }
}
void activate_step_16(HANDLE& device) {
  CSB_Write(device, 130, hbm13);
  CSB_Write(device, 131, runtime3);
  CSB_Write(device, 132, 608);
  CSB_Write(device, 133, 608);
  CSB_Write(device, 134, runtime2);
  CSB_Write(device, 135, 608);
  CSB_Write(device, 136, 608);
  CSB_Write(device, 137, 13696);
  CSB_Write(device, 138, 1);
  CSB_Write(device, 139, 19);
  CSB_Write(device, 140, 1);
  CSB_Write(device, 141, 0);
  CSB_Write(device, 142, 0);
  CSB_Write(device, 143, 0);
  CSB_Write(device, 144, 0);
  CSB_Write(device, 145, 16);
  while (CSB_Read(device, 129) != 1) {}
}
void mvm_f16xi4_step_17(HANDLE& device) {
  for (int ch = 0; ch < 14; ch += 1) {
    CSB_Write(device, 2, 4096);
    CSB_Write(device, 3, 19);
    CSB_Write(device, 4, 1);
    CSB_Write(device, 5, 19);
    CSB_Write(device, 6, 1);
    CSB_Write(device, 7, ((ch < 13) ? 1024 : 384));
    CSB_Write(device, 8, (ch * 1024));
    CSB_Write(device, 9, 0);
    CSB_Write(device, 10, runtime0);
    CSB_Write(device, 11, (hbm14 + (67584 * ch)));
    CSB_Write(device, 12, 16896);
    CSB_Write(device, 13, (runtime3 + (608 * ((ch * 1024) / 512))));
    CSB_Write(device, 14, 0);
    CSB_Write(device, 15, 0);
    CSB_Write(device, 16, ((ch ? 1 : 0) * 2));
    CSB_Write(device, 17, 0);
    CSB_Write(device, 18, 0);
    CSB_Write(device, 19, 65792);
    CSB_Write(device, 20, 65792);
    CSB_Write(device, 21, 0);
    CSB_Write(device, 22, 5769216);
    CSB_Write(device, 23, 3670144);
    CSB_Write(device, 24, 2048);
    CSB_Write(device, 25, (hbm15 + (32 * ((ch * 1024) / 256))));
    CSB_Write(device, 26, 0);
    CSB_Write(device, 27, 0);
    CSB_Write(device, 28, 0);
    CSB_Write(device, 29, 608);
    CSB_Write(device, 30, 608);
    CSB_Write(device, 31, 608);
    CSB_Write(device, 32, 608);
    CSB_Write(device, 33, 31);
    while (CSB_Read(device, 1) != 1) {}
  }
}
void elementwise_step_18(HANDLE& device) {
  CSB_Write(device, 130, 2);
  CSB_Write(device, 131, runtime2);
  CSB_Write(device, 132, 608);
  CSB_Write(device, 133, 608);
  CSB_Write(device, 134, runtime0);
  CSB_Write(device, 135, 608);
  CSB_Write(device, 136, 608);
  CSB_Write(device, 137, 13696);
  CSB_Write(device, 138, 19);
  CSB_Write(device, 139, 1);
  CSB_Write(device, 140, runtime3);
  CSB_Write(device, 141, 608);
  CSB_Write(device, 142, 608);
  CSB_Write(device, 145, 2);
  while (CSB_Read(device, 129) != 1) {}
}
void mvm_f16xi4_step_19(HANDLE& device) {
  for (int ch = 0; ch < 16; ch += 1) {
    CSB_Write(device, 2, 13696);
    CSB_Write(device, 3, 19);
    CSB_Write(device, 4, 1);
    CSB_Write(device, 5, 19);
    CSB_Write(device, 6, 1);
    CSB_Write(device, 7, ((ch < 15) ? 256 : 256));
    CSB_Write(device, 8, (ch * 256));
    CSB_Write(device, 9, 0);
    CSB_Write(device, 10, runtime0);
    CSB_Write(device, 11, (hbm16 + (56576 * ch)));
    CSB_Write(device, 12, 56576);
    CSB_Write(device, 13, (runtime3 + (608 * ((ch * 256) / 512))));
    CSB_Write(device, 14, 0);
    CSB_Write(device, 15, 0);
    CSB_Write(device, 16, ((ch ? 1 : 0) * 2));
    CSB_Write(device, 17, 0);
    CSB_Write(device, 18, 0);
    CSB_Write(device, 19, 65792);
    CSB_Write(device, 20, 65792);
    CSB_Write(device, 21, 0);
    CSB_Write(device, 22, 5769216);
    CSB_Write(device, 23, 3670144);
    CSB_Write(device, 24, 1408);
    CSB_Write(device, 25, (hbm17 + (32 * ((ch * 256) / 256))));
    CSB_Write(device, 26, 0);
    CSB_Write(device, 27, 0);
    CSB_Write(device, 28, 0);
    CSB_Write(device, 29, 608);
    CSB_Write(device, 30, 608);
    CSB_Write(device, 31, 608);
    CSB_Write(device, 32, 608);
    CSB_Write(device, 33, 31);
    while (CSB_Read(device, 1) != 1) {}
  }
}
void elementwise_step_20(HANDLE& device) {
  CSB_Write(device, 130, 0);
  CSB_Write(device, 131, runtime3);
  CSB_Write(device, 132, 608);
  CSB_Write(device, 133, 608);
  CSB_Write(device, 134, runtime0);
  CSB_Write(device, 135, 608);
  CSB_Write(device, 136, 608);
  CSB_Write(device, 137, 4096);
  CSB_Write(device, 138, 19);
  CSB_Write(device, 139, 1);
  CSB_Write(device, 140, runtime1);
  CSB_Write(device, 141, 608);
  CSB_Write(device, 142, 608);
  CSB_Write(device, 145, 2);
  while (CSB_Read(device, 129) != 1) {}
}
void norm_step_21(HANDLE& device) {
  CSB_Write(device, 130, hbm18);
  CSB_Write(device, 131, runtime0);
  CSB_Write(device, 132, 608);
  CSB_Write(device, 133, 608);
  CSB_Write(device, 134, runtime1);
  CSB_Write(device, 135, 608);
  CSB_Write(device, 136, 608);
  CSB_Write(device, 137, 4096);
  CSB_Write(device, 138, 1);
  CSB_Write(device, 139, 19);
  CSB_Write(device, 140, 19);
  CSB_Write(device, 141, 155648);
  CSB_Write(device, 142, 0);
  CSB_Write(device, 143, 0);
  CSB_Write(device, 144, 0);
  CSB_Write(device, 145, 32);
  while (CSB_Read(device, 129) != 1) {}
}
void mvm_f16xi4_step_22(HANDLE& device) {
  for (int ch = 0; ch < 64; ch += 1) {
    CSB_Write(device, 2, 4096);
    CSB_Write(device, 3, 19);
    CSB_Write(device, 4, 1);
    CSB_Write(device, 5, 19);
    CSB_Write(device, 6, 1);
    CSB_Write(device, 7, ((ch < 63) ? 1024 : 512));
    CSB_Write(device, 8, (ch * 1024));
    CSB_Write(device, 9, 63);
    CSB_Write(device, 10, runtime1);
    CSB_Write(device, 11, (hbm19 + (67584 * ch)));
    CSB_Write(device, 12, 16896);
    CSB_Write(device, 13, (runtime0 + (608 * ((ch * 1024) / 512))));
    CSB_Write(device, 14, 0);
    CSB_Write(device, 15, 0);
    CSB_Write(device, 16, ((ch ? 1 : 0) * 2));
    CSB_Write(device, 17, 0);
    CSB_Write(device, 18, 0);
    CSB_Write(device, 19, 65792);
    CSB_Write(device, 20, 65792);
    CSB_Write(device, 21, 0);
    CSB_Write(device, 22, 5769216);
    CSB_Write(device, 23, 3670144);
    CSB_Write(device, 24, 2048);
    CSB_Write(device, 25, (hbm20 + (32 * ((ch * 1024) / 256))));
    CSB_Write(device, 26, 0);
    CSB_Write(device, 27, 0);
    CSB_Write(device, 28, 0);
    CSB_Write(device, 29, 608);
    CSB_Write(device, 30, 608);
    CSB_Write(device, 31, 608);
    CSB_Write(device, 32, 608);
    CSB_Write(device, 33, 63);
    while (CSB_Read(device, 1) != 1) {}
  }
}

void test(HANDLE& device) {
  norm_step_1(device);
  mvm_f16xi4_step_2(device);
  rope_step_3(device);
  mvm_f16xi4_step_4(device);
  rope_step_5(device);
  kvcache2hbm_step_6(device);
  mvm_f16xf16_step_7(device);
  softmax_step_8(device);
  mvm_f16xi4_step_9(device);
  kvcache2hbm_step_10(device);
  mvm_f16xf16_step_11(device);
  mvm_f16xi4_step_12(device);
  elementwise_step_13(device);
  norm_step_14(device);
  mvm_f16xi4_step_15(device);
  activate_step_16(device);
  mvm_f16xi4_step_17(device);
  elementwise_step_18(device);
  mvm_f16xi4_step_19(device);
  elementwise_step_20(device);
  norm_step_21(device);
  mvm_f16xi4_step_22(device);
}
